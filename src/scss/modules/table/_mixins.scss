////
/// @group tables
////

/// $table-background       
$table-background        : $white !default;

/// $table-border-color   
$table-border-color      : $global-border-color !default;

/// $table-border-radius    
$table-border-radius     : 0 !default;

/// $table-border           
$table-border            : 1px solid $table-border-color !default;

/// $table-head-border-bottom:
$table-head-border-bottom: 0 !default;

/// $table-padding           
$table-padding           : 8px 10px 10px !default;

/// $table-padding-sm        
$table-padding-sm        : 6px 10px 8px !default;

/// $table-cell-padding      
$table-cell-padding      : 12px 12px !default;

/// $table-cell-padding-sm   
$table-cell-padding-sm   : 2px 12px !default;

/// $table-row-hover         
$table-row-hover         : #fff2cf !default;

/// $table-row-stripe-hover  
$table-row-stripe-hover  : $table-row-hover !default;

/// $table-striped-background: 
$table-striped-background: darken($white, 3%) !default;

/// $table-stripe            
$table-stripe            : odd !default;

/// $table-head-background   
$table-head-background   : $color-gray-2 !default;

/// $table-transparent-head-background   
$table-transparent-head-background   : $color-gray-0 !default;

/// $table-foot-background   
$table-foot-background   : $color-gray-1 !default;

/// $table-head-font-color   
$table-head-font-color   : $color-gray-7 !default;

/// $table-foot-font-color   
$table-foot-font-color   : $color-gray-6 !default;

/// $table-header-font-size  
$table-header-font-size  : 12px !default;

/// $table-cell-font-size    
$table-cell-font-size    : 12px !default;

/// $table-sm-font-size      
$table-sm-font-size      : 13px !default;

/// $table-shadow            
$table-shadow            : 0 1px 3px rgba(0, 0, 0, .2) !default;

/// $show-header-for-stacked : 
$show-header-for-stacked : false !default;

/// $table-state-selected 
$table-state-selected : #FAFAD2 !default;
/// $table-state-active   
$table-state-active   : #FAFAD2 !default;
/// $table-state-success  
$table-state-success  : lighten($success, 20%) !default;
/// $table-state-warning  
$table-state-warning  : lighten($warning, 20%) !default;
/// $table-state-danger   
$table-state-danger   : lighten($danger, 20%) !default;


// $table-colors:
$table-colors:
  ("primary", $primary)
  ("success", $success)
  ("default", $secondary)
  ("warning", $warning)
  ("danger", $danger) !default;

// $table-states:
$table-states:
  ("selected", $table-state-selected)
  ("active", $table-state-active)
  ("success", $table-state-success)
  ("warning", $table-state-warning)
  ("danger", $table-state-danger) !default;

@mixin ipreo-table-children-styles($stripe: $table-stripe) {
.c-table {
  thead,
  tbody,
  tfoot {
    border: $table-border;
    background-color: $table-background;
  }

  // Table head
  thead {
    background: $table-head-background;
    color: $table-head-font-color;
    border-bottom: $table-head-border-bottom;

    th {
      font-size: $table-header-font-size;
    }
  }

  // Table foot
  tfoot {
    background: $table-foot-background;
    color: $table-foot-font-color;
  }

  // Table head and foot
  thead,
  tfoot {
    tr {
      background: transparent;
    }

    // Cells within head and foot
    th,
    td {
      border-right: $table-border;
      padding: $table-padding;
      font-weight: bold;
    }
  }

  // Table rows

  &:not(.c-table-transparent) {

    tbody {
      tr {
        // If stripe is set to even, darken the even rows.
        @if $stripe == even {
          &:nth-child(even) {
            background-color: $table-striped-background;
          }
        }

        // If stripe is set to odd, darken the odd rows. @else if $stripe == odd {
        &:nth-child(odd) {
          background-color: $table-striped-background;
        }
      }
    }
  }

  th,
  td {
    border-right: $table-border;
    padding: $table-padding;
  }
}
}

// Adds the general styles for tables.
// Uses keywords even, odd, or none to darken rows of the table. The default value is even.
@mixin table($stripe: none, $nest: false) {
  width: 100%;
  margin-bottom: $spacing-global-margin;
  border-radius: $global-radius;
  text-align: left;

  &-layout-fixed {
    table-layout: fixed;
  }

  @if $nest {
    @include ipreo-table-children-styles($stripe);
  }

  @else {
    @at-root {
      @include ipreo-table-children-styles($stripe);
    }
  }
}

// @mixin table-striped($stripe: $table-stripe, $nest: false) {
//   width: 100%;
//   margin-bottom: $global-margin;
//   border-radius: $global-radius;

//   @include ipreo-table-children-styles($stripe);
// }

/// Adds the ability to horizontally scroll the table when the content overflows horizontally.
@mixin table-scroll {
  display: block;
  width: 100%;
  overflow-x: auto;
}

/// Slightly darkens the table rows on hover.
@mixin table-hover {
  tbody {
    tr {
      &:hover {
        background-color: $table-row-hover;
      }

      //Darkens the even striped table rows.
      @if ($table-stripe == even) {
        &:nth-of-type(even):hover {
          background-color: $table-row-hover;
        }
      }

      //Darkens the odd striped table rows. @else if($table-stripe == odd) {
      &:nth-of-type(odd):hover {
        background-color: $table-row-hover;
      }
    }
  }
}

@mixin table-condensed {
	tbody,
	tfoot {
    td {
      padding: $table-padding-sm;
      font-size: $table-sm-font-size;
    }
	}  
}

/// Adds styles for a stacked table. Useful for sm-screen layouts.
/// @param {Boolean} $header [$show-header-for-stacked] - Show the first th of header when stacked.
@mixin table-stack($header: $show-header-for-stacked) {
  @if $header {
    thead {
      th::first-child {
        display: block;
      }

      th {
        display: none;
      }
    }
  }

  @else {
    thead {
      display: none;
    }
  }

  tfoot {
    display: none;
  }

  tr,
  th,
  td {
    display: block;
  }

  td {
    border-top: 0;
  }
}
