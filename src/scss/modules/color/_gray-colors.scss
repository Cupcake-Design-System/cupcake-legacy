//───────────────────────────────────
// Gray Map
//───────────────────────────────────
$gray-map: (
  gray: (
    0: $color-gray-0,
    1: $color-gray-1,
    2: $color-gray-2,
    3: $color-gray-3,
    4: $color-gray-4,
    5: $color-gray-5,
    6: $color-gray-6,
    7: $color-gray-7,
    8: $color-gray-8,
    9: $color-gray-9
  )
);

/// example: color: color(gray, 6);
@function color($color, $tone: 5) {
  @if map-has-key($gray-map, $color) {
    @return map-get(map-get($gray-map, $color), $tone);
  }

  @warn "Unknown `#{name}` in $palette.";

  @return null;
}

@mixin gray-color-class-export {
  @each $palette, $tones in $gray-map {
    @each $tone_name, $tone_value in $tones {
      @if ($tone_name == 6) {
        .c-text-#{$palette} {
          color: $tone_value;
        }

        .c-bg-#{$palette} {
          background-color: $tone_value;
        }

        .c-bd-#{$palette} {
          border-color: $tone_value;
        }
      }
    }
  }

  @each $palette, $tones in $gray-map {
    @each $tone_name, $tone_value in $tones {
      .c-text-#{$palette}-#{$tone_name} {
        color: $tone_value;
      }

      .c-bg-#{$palette}-#{$tone_name} {
        background-color: $tone_value;
      }

      .c-bd-#{$palette}-#{$tone_name} {
        border-color: $tone_value;
      }
    }
  }

  .c-text-black {
    color: $black;
  }

  .c-text-white {
    color: $white;
  }

  .c-bg-black {
    background-color: $black;
  }

  .c-bg-white {
    background-color: $white;
  }
}

$color-gray-0: color(gray, 0);
$color-gray-1: color(gray, 1);
$color-gray-2: color(gray, 2);
$color-gray-3: color(gray, 3);
$color-gray-4: color(gray, 4);
$color-gray-5: color(gray, 5);
$color-gray-6: color(gray, 6);
$color-gray-7: color(gray, 7);
$color-gray-8: color(gray, 8);
$color-gray-9: color(gray, 9);
